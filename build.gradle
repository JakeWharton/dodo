buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10'
		classpath 'com.squareup.sqldelight:gradle-plugin:1.4.4'
	}
}

apply plugin: 'org.jetbrains.kotlin.jvm'

apply plugin: 'com.squareup.sqldelight'
sqldelight {
	Database {
		packageName = 'com.jakewharton.dodo.db'
		schemaOutputDirectory = file('src/main/sqldelight/databases')
		verifyMigrations = true
	}
}

apply plugin: 'application'
mainClassName = 'com.jakewharton.dodo.Main'

dependencies {
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.0'
	implementation 'com.github.ajalt.clikt:clikt:3.0.1'
	implementation 'com.squareup.sqldelight:sqlite-driver:1.5.4'
	implementation 'org.xerial:sqlite-jdbc:3.40.0.0'
	implementation 'org.twitter4j:twitter4j-core:4.0.7'
	implementation 'ch.qos.logback:logback-classic:1.4.5'

	def ktorVersion = '1.4.1'
	implementation "io.ktor:ktor-server-core:${ktorVersion}"
	implementation "io.ktor:ktor-server-netty:${ktorVersion}"
	implementation "io.ktor:ktor-html-builder:${ktorVersion}"

	testImplementation 'junit:junit:4.13.2'
	testImplementation 'com.google.truth:truth:1.0.1'
}

repositories {
	mavenCentral()
	// https://github.com/Kotlin/kotlinx.html/issues/81
	jcenter {
		content {
			includeModule('org.jetbrains.kotlinx', 'kotlinx-html-jvm')
		}
	}
}

tasks.named("distTar").configure { task ->
	task.enabled = false
}
tasks.named("assemble").configure { task ->
	task.dependsOn(tasks.getByName("installDist"))
}

tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
	task.kotlinOptions {
		jvmTarget = '1.8'
		freeCompilerArgs += [
				'-progressive',
		]
	}
}
